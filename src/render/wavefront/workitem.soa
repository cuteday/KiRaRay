flat int;
flat uint;
flat float;
flat bool;
flat double;
flat Light;
flat BsdfType;
flat ShadingData;
flat LCGSampler;
flat PCGSampler;
flat HaltonSampler;

flat vec2f;
flat vec3f;
flat Color;

struct Ray{ vec3f origin, dir; };
struct LightSampleContext{ vec3f p, n; };

struct PixelState {
	Color L;
	PCGSampler sampler;
};

struct RayWorkItem {
	Ray ray;
	LightSampleContext ctx;
	float pdf;
	Color thp;
	uint depth;
	uint pixelId;
};

struct MissRayWorkItem {
	Ray ray;
	LightSampleContext ctx;
	float pdf;
	Color thp;
	uint depth;
	uint pixelId;
};

struct HitLightWorkItem {
	Light light;
	LightSampleContext ctx;
	float pdf;
	vec3f p;
	vec3f wo;
	vec3f n;
	vec2f uv;
	Color thp;
	uint depth;
	uint pixelId;
};

struct ShadowRayWorkItem {
	Ray ray;
	float tMax;
	Color Li;
	Color a;
	uint pixelId;
};

struct ScatterRayWorkItem {
	Color thp;
	ShadingData sd;
	uint depth;
	uint pixelId;
};